package info.borissov;

import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.chart.BarChart;
import javafx.scene.chart.CategoryAxis;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.XYChart;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.layout.*;

import javafx.stage.Stage;
import javafx.stage.StageStyle;


/**
 * @author: Sergej Borissov
 * @version: 1.0.0.0
 * @idee: erfassung der Seiten und Menge an Büchern
 *        pro metrischer Wiederholung einer Lesedauer
 *
 */

public class BarChartExperiments extends Application {





    final int daysPerMonth = 30;
    final int daysPerWeek = 7;
    final int minute = 60;
    final int daysPerYear = 365;
    final int pagePerHour = 20;
    final float averagePagesPerBook = 300f;
    final int monthsPerYear = 12;



    public static int calculateDurationYear(){
        return 365/60;
    }

    public static int calculatePagePerMonth(){
        return  60 / 30 * 20;
    }

    public static float calculateBooksPerMonth(){
        return calculatePagePerMonth() / 300f;
    }



    @Override
    public void start(Stage primaryStage) throws Exception {


        /*
        IntegerProperty daysOfMont = new SimpleIntegerProperty(30);
        IntegerProperty minutesOfHour = new SimpleIntegerProperty(60);
         */

        primaryStage.setTitle("Metrik des Leseverhaltens");


        CategoryAxis xAxis = new CategoryAxis();
        xAxis.setLabel("Kategorien");

        NumberAxis yAxis = new NumberAxis();
        yAxis.setLabel("Quantität/Menge");

        BarChart barChart = new BarChart(xAxis, yAxis);

        XYChart.Series dataSeries1 = new XYChart.Series();
        dataSeries1.setName("Lese - Statistik");
        barChart.setStyle("-fx-border-color: blue");




        XYChart.Data pagesPerWeek = new XYChart.Data("Seiten pro Woche", 0);
        XYChart.Data booksPerWeek = new XYChart.Data("Bücher pro Woche", 0);
        XYChart.Data yearData = new XYChart.Data("Lese-Zeit-Jahr (h)", 0);

        XYChart.Data booksMonth = new XYChart.Data("Bücher pro Monat", 0);

        dataSeries1.getData().add(pagesPerWeek);
        dataSeries1.getData().add(booksPerWeek);

        dataSeries1.getData().add(booksMonth);


        // Monatsdata.YValueProperty().bind(daysOfMont.divide(minutesOfHour));

        barChart.getData().add(dataSeries1);


        VBox vbox = new VBox(barChart);
        vbox.setAlignment(Pos.CENTER);

        //Scene scene = new Scene(vbox, 400, 900);
        //primaryStage.setScene(scene)


        TextField textField = new TextField("Tägliche Lese-Dauer in Minuten:  ");
        textField.setMinWidth(230);

        textField.setStyle("-fx-text-fill: green");

        //  Bindings.anschauen()

        textField.textProperty().addListener((observable, oldValue, newValue) -> {


            if (newValue != null) {
                try {


                    pagesPerWeek.setYValue(Integer.parseInt(newValue) *  7 / 60);
                    booksPerWeek.setYValue(Integer.parseInt(newValue) * 7 /60 * 20 / 300);
                    yearData.setYValue(Integer.parseInt(newValue) * calculateDurationYear());
                    booksMonth.setYValue(Integer.parseInt(newValue) * calculateBooksPerMonth());


                } catch (NumberFormatException ex) {
                    ex.printStackTrace();
                }
            }
        });


        /*
        data1.YValueProperty().bind(Bindings.createIntegerBinding(() -> {
            try {
                return Integer.parseInt(textField.getText());


            } catch (NumberFormatException ex) {
                ex.printStackTrace();
                return 0;
            }
        }, textField.textProperty()));


         */


        FlowPane root = new FlowPane();
        root.getChildren().add(textField);
        HBox hBox = new HBox(vbox, root);
        //root.setAlignment(Pos.TOP_LEFT);
        Scene scenetext = new Scene(hBox, 700, 800);

        primaryStage.setScene(scenetext);
        primaryStage.setHeight(700);
        primaryStage.setWidth(1200);
        primaryStage.show();


    }



    public static void main(String[] args) {

        Application.launch(args);

    }


}

--------------------


.dataseries1 {
    -fx-brackround-color: DIMGRAY;
}
